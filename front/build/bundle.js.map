{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/rightbar/postsFilter.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/components/layout.svelte","../../src/elements/head.svelte","../../src/elements/textarea.svelte","../../src/elements/button.svelte","../../src/components/card.svelte","../../src/components/article.svelte","../../src/routes/post.svelte","../../src/components/editor.svelte","../../src/routes/posts.svelte","../../src/elements/input.svelte","../../src/routes/login.svelte","../../src/routes/profile.svelte","../../src/routes/register.svelte","../../src/routes/edit.svelte","../../src/router.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  import { cats, filter, sort } from \"../main\";\n  let filterCat = \"\";\n  let sorts = \"\";\n\n  $: {\n    filter.set(filterCat);\n    sort.set(sorts);\n  }\n</script>\n\n<style>\n  input {\n    display: none;\n  }\n\n  .filters {\n    padding: 16px 24px;\n  }\n\n  label,\n  h4 {\n    margin-bottom: 16px;\n  }\n\n  .bycat,\n  .sort {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 24px;\n    font-weight: 100;\n  }\n\n  input {\n    display: none;\n  }\n\n  label {\n    color: var(--secondary-color);\n    cursor: pointer;\n    opacity: 0.5;\n  }\n\n  input:checked + label {\n    opacity: 1;\n    font-weight: 500;\n  }\n</style>\n\n<div class=\"filters\">\n\n  <div class=\"bycat\">\n\n    <h4>Фильтр по категориям:</h4>\n    <input\n      id=\"filter0\"\n      type=\"radio\"\n      value=\"\"\n      name=\"cats\"\n      checked\n      bind:group={filterCat} />\n    <label for=\"filter0\">Все категории</label>\n    {#await cats() then cat}\n      {#each cat as { id, name }}\n        <input\n          id=\"filter{id}\"\n          type=\"radio\"\n          value={id}\n          name=\"cats\"\n          bind:group={filterCat} />\n        <label for=\"filter{id}\">#{name}</label>\n      {/each}\n    {/await}\n  </div>\n\n  <div class=\"sort\">\n\n    <h4>Сортировка:</h4>\n    <input\n      id=\"sort0\"\n      type=\"radio\"\n      value=\"\"\n      name=\"sort\"\n      checked\n      bind:group={sorts} />\n    <label for=\"sort0\">По времени</label>\n    <input\n      id=\"sort1\"\n      type=\"radio\"\n      value=\"likes\"\n      name=\"sort\"\n      bind:group={sorts} />\n    <label for=\"sort1\">По лайкам</label>\n\n  </div>\n\n</div>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix) {\n            if (typeof prefix == 'string' && path.startsWith(prefix)) {\n                path = path.substr(prefix.length) || '/'\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script>\n  import Filter from \"../rightbar/postsFilter.svelte\";\n\n  import { location } from \"svelte-spa-router\";\n  import { username, fullname, id, update, host } from \"../main\";\n  $: userid = $id;\n  $: page = $location.split(\"/\")[1];\n\n  const components = { \"/\": Filter };\n  let panel = components[$location];\n</script>\n\n<style>\n  main {\n    grid-template-columns: 275px 598px 392px;\n    max-width: calc(275px + 598px + 392px);\n    position: relative;\n    margin: 0 auto;\n    height: 100vh;\n    display: grid;\n  }\n\n  .menu {\n    border-right: var(--border);\n    flex-direction: column;\n    overflow: hidden;\n    display: flex;\n    background: var(--bg-color);\n    z-index: 9;\n  }\n\n  .basic {\n    border-right: var(--border);\n  }\n\n  .content {\n    position: relative;\n  }\n\n  /* Adaptive layout props */\n  @media only screen and (max-width: 1265px) {\n    main {\n      grid-template-columns: 68px 598px 392px;\n      max-width: calc(68px + 598px + 392px);\n    }\n    span {\n      display: none;\n    }\n    li {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 1078px) {\n    main {\n      grid-template-columns: 68px auto;\n      max-width: calc(88px + 598px);\n    }\n    .rightbar {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 686px) {\n    .basic {\n      border-right: none !important;\n    }\n  }\n\n  @media only screen and (max-width: 500px) {\n    main {\n      grid-template-columns: auto;\n    }\n    .menu {\n      flex-direction: row !important;\n      justify-content: space-around;\n      border-right: none !important;\n      border-top: var(--border);\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      left: 0;\n    }\n    .login {\n      bottom: auto !important;\n      left: auto !important;\n      right: 0;\n      top: 0;\n    }\n    .hide {\n      display: none;\n    }\n  }\n\n  /* Menu links */\n  a {\n    align-items: center;\n    margin: 11px 0;\n    display: flex;\n    opacity: 0.8;\n    position: relative;\n  }\n\n  [aria-checked=\"true\"] {\n    position: absolute;\n    top: -2px;\n    left: 36px;\n    background: #ff5858;\n    height: 12px;\n    width: 12px;\n    border-radius: 50%;\n    display: inline-block;\n    border: 2px solid #ff8b8b;\n  }\n\n  i {\n    margin: 0 22px;\n    font-size: 24px;\n  }\n\n  span {\n    font-size: 18px;\n  }\n\n  /* Profile - login item */\n  img {\n    border-radius: 50%;\n    margin: 0 19px;\n    height: 30px;\n    width: 30px;\n    object-fit: cover;\n  }\n\n  ul:last-child {\n    font-size: 0.7em;\n    margin-top: 4px;\n  }\n\n  .login {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    z-index: 9;\n  }\n\n  /* Links highlight */\n  [aria-current=\"page\"] {\n    color: var(--secondary-color);\n    font-weight: bold;\n  }\n\n  [aria-current=\"page\"]:hover {\n    opacity: 1;\n  }\n</style>\n\n<main>\n  <div class=\"menu\">\n    <a href=\"/#\" aria-current={(page == '' || page == 'posts') && 'page'}>\n      <i class=\"help-circle\" />\n      <span>Вопросы</span>\n    </a>\n\n    <a href=\"/#/knowlege\" aria-current={page == 'knowlege' && 'page'}>\n      <i class=\"book-open\" />\n      <span>Знания</span>\n    </a>\n\n    <a href=\"/#/ranking\" aria-current={page == 'ranking' && 'page'}>\n      <i class=\"award\" />\n      <span>Рейтинг</span>\n    </a>\n\n    <a href=\"/#/notify\" aria-current={page == 'notify' && 'page'}>\n      <i class=\"bell\" />\n      <span>Уведомления</span>\n      <small aria-checked=\"true\" />\n    </a>\n  </div>\n\n  <div class=\"basic\">\n\n    {#if $username != ''}\n      <a href=\"/#/profile\" class=\"login {page == 'profile' && 'hide'}\">\n        <img\n          src=\"{host}/avatars/{userid}.jpg?u={$update}\"\n          alt=\"\"\n          on:error={() => (userid = 0)} />\n        <li>\n          <ul>{$fullname}</ul>\n          <ul>@{$username}</ul>\n        </li>\n      </a>\n    {:else}\n      <a href=\"/#/login\" class=\"login {page == 'login' && 'hide'}\">\n        <img src=\"lock.png\" alt=\"\" />\n\n        <li>\n          <ul>Привет, студент!</ul>\n          <ul>Залогинься плиз...</ul>\n        </li>\n      </a>\n    {/if}\n    <div class=\"content\">\n      <slot />\n    </div>\n  </div>\n  <div class=\"rightbar\">\n    <svelte:component this={panel} />\n  </div>\n</main>\n","<script>\n  import { pop } from \"svelte-spa-router\";\n\n  export let secondLevel = false;\n  export let title = \"No title\";\n</script>\n\n<style>\n  header {\n    justify-content: space-between;\n    border-bottom: var(--border);\n    padding: 0 16px;\n    height: 52px;\n    width: 100%;\n  }\n\n  header,\n  div {\n    align-items: center;\n    display: flex;\n  }\n\n  .arrow-left {\n    margin-right: 16px;\n    display: none;\n  }\n\n  div:last-child {\n    display: none;\n  }\n\n  h4 {\n    font-weight: 400;\n  }\n\n  @media only screen and (max-width: 1078px) {\n    div:last-child {\n      display: block;\n    }\n  }\n\n  @media only screen and (max-width: 500px) {\n    header {\n      padding-right: 68px !important;\n    }\n    .arrow-left {\n      display: initial;\n    }\n  }\n</style>\n\n<header>\n  <div>\n    {#if secondLevel}\n      <i class=\"arrow-left\" on:click={pop} />\n    {/if}\n    <h4>{title}</h4>\n  </div>\n  <div>\n    <slot />\n  </div>\n</header>\n","<script>\n  export let value;\n  export let placeholder;\n  export let autoresize = false;\n  export let max = -1;\n\n  const autosize = e => {\n    if (autoresize) {\n      let size = 30;\n      e.currentTarget.style.height = \"1px\";\n      e.currentTarget.style.height = size + e.currentTarget.scrollHeight + \"px\";\n    }\n  };\n</script>\n\n<style>\n  textarea {\n    background: var(--input-color);\n    color: var(--text-color);\n    box-sizing: border-box;\n    border-radius: 5px;\n    line-height: 1.7;\n    overflow: hidden;\n    font-size: 13px;\n    padding: 16px;\n    height: 84px;\n    border: none;\n    resize: none;\n    width: 100%;\n  }\n</style>\n\n<textarea {placeholder} bind:value on:input={autosize} maxlength={max} />\n","<script>\n  export let name;\n  export let disabled = false;\n  export let small = false;\n</script>\n\n<style>\n  button {\n    background: var(--secondary-color);\n    color: var(--text-color);\n    padding: 6px 12px;\n    cursor: pointer;\n    border: none;\n    float: right;\n  }\n\n  button:disabled {\n    opacity: 0.5;\n  }\n\n  [aria-checked=\"false\"] {\n    margin: 16px 0;\n    height: 38px;\n    width: 100%;\n  }\n\n  [aria-checked=\"true\"] {\n    border-radius: 50px;\n  }\n</style>\n\n<button aria-checked={small} on:click {disabled}>{name}</button>\n","<script>\n  import { host, formatDate, update } from \"../main\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatcher = createEventDispatcher();\n  export let uid;\n  export let pid = 0;\n  export let cid = 0;\n  export let created = 0;\n  export let text = \"\";\n  export let username = \"\";\n  export let categories = [];\n  export let likes = 0;\n  export let dislikes = 0;\n  export let comments = 0;\n  export let reaction = \"\";\n  $: count = likes - dislikes;\n  $: react = reaction;\n</script>\n\n<style>\n  [aria-checked=\"true\"]:hover {\n    background: var(--input-color);\n  }\n  .card {\n    grid-template-columns: 40px auto;\n    border-bottom: var(--border);\n    column-gap: 16px;\n    display: grid;\n    padding: 16px;\n  }\n  img {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    object-fit: cover;\n    object-position: 50% 50%;\n  }\n\n  .head,\n  .foot {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  span,\n  p {\n    font-weight: 200;\n    font-size: 13px;\n  }\n\n  span {\n    opacity: 0.8;\n  }\n\n  p {\n    line-height: 1.8;\n    margin: 8px 0;\n  }\n\n  i,\n  small {\n    font-weight: 200;\n    margin-top: 4px;\n    font-size: 11px;\n    opacity: 0.4;\n  }\n\n  .buttons {\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n    width: 55px;\n  }\n\n  .buttons > i {\n    opacity: 1;\n  }\n\n  .like > .plus,\n  .dislike > .minus,\n  i:hover {\n    color: var(--secondary-color);\n  }\n</style>\n\n<div class=\"card\" aria-checked={pid != 0 && true}>\n  <div>\n    <a href=\"#/users/{uid}\">\n      <img\n        src=\"{host}/avatars/{uid}.jpg?u={$update}\"\n        alt=\"\"\n        on:error={() => (uid = 0)} />\n    </a>\n    <slot name=\"underava\" />\n  </div>\n  <a href={pid == 0 ? null : '#/posts/' + pid}>\n    <slot name=\"blank\" />\n    {#if cid != 0 || pid != 0}\n      <div class=\"head\">\n        <span>@{username}</span>\n        <small>{formatDate(created)}</small>\n      </div>\n      <p>\n        {@html text}\n      </p>\n      <div class=\"foot\">\n        <div>\n          {#if cid == 0}\n            {#each categories as c}\n              <small>#{c.Name}</small>\n              &nbsp;\n            {/each}\n          {/if}\n        </div>\n        <div class={cid != 0 && 'buttons ' + react}>\n          {#if cid == 0}\n            <i class=\"heart\" />\n            <small>{likes - dislikes}</small>\n            &nbsp;\n            <i class=\"message-square\" />\n            <small>{comments}</small>\n          {:else}\n            <i\n              class=\"plus\"\n              on:click={() => {\n                dispatcher('plus', {\n                  id: cid,\n                  reaction: 'like',\n                  type: 'comment'\n                });\n                if (react == 'like') {\n                  react = 'idle';\n                  count--;\n                } else if (react == 'dislike') {\n                  count = count + 2;\n                  react = 'like';\n                } else {\n                  count++;\n                  react = 'like';\n                }\n              }} />\n            &nbsp;\n            <small>{count}</small>\n            &nbsp;\n            <i\n              class=\"minus\"\n              on:click={() => {\n                dispatcher('minus', {\n                  id: cid,\n                  reaction: 'dislike',\n                  type: 'comment'\n                });\n                if (react == 'dislike') {\n                  react = 'idle';\n                  count++;\n                } else if (react == 'like') {\n                  count = count - 2;\n                  react = 'dislike';\n                } else {\n                  count--;\n                  react = 'dislike';\n                }\n              }} />\n          {/if}\n        </div>\n      </div>\n    {/if}\n  </a>\n  <slot />\n</div>\n","<script>\n  import Card from \"../components/card.svelte\";\n  import { host, id } from \"../main\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatcher = createEventDispatcher();\n\n  export let Title;\n  export let Categories;\n  export let Reaction;\n  export let Text;\n  export let PostID;\n  export let AuthorID;\n  export let Likes;\n  export let Dislikes;\n  export let Username;\n  $: count = Likes - Dislikes;\n  $: react = Reaction;\n</script>\n\n<style>\n  .long {\n    font-size: 14px;\n    font-weight: 200;\n    line-height: 1.8;\n  }\n\n  .long,\n  .actions {\n    border-bottom: var(--border);\n    padding: 16px;\n  }\n\n  small {\n    line-height: 1.8;\n    font-weight: 200;\n    font-size: 13px;\n    opacity: 0.4;\n  }\n\n  i,\n  span {\n    opacity: 0.8;\n  }\n\n  span {\n    font-size: 13px;\n  }\n\n  .actions,\n  .actions > div {\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n  }\n\n  .actions > div {\n    width: 80px;\n  }\n\n  .like > .thumbs-up,\n  .dislike > .thumbs-down,\n  i:hover {\n    color: var(--secondary-color);\n  }\n\n  p {\n    font-weight: 200;\n    font-size: 14px;\n    line-height: 1.8;\n  }\n\n  .count {\n    margin: 0 8px;\n  }\n</style>\n\n<Card uid={AuthorID}>\n  <div slot=\"blank\">\n    <span>@{Username}</span>\n    <p>{Title}</p>\n    <div class=\"cats\">\n      {#each Categories as cat}\n        <small>#{cat.Name}</small>\n        &nbsp;\n      {/each}\n    </div>\n  </div>\n\n</Card>\n\n{#if Text != ''}\n  <div class=\"long\">\n    {@html Text}\n  </div>\n{/if}\n<div class=\"actions\">\n  <div>\n    {#if AuthorID == $id}\n      <a href=\"#/edit/{PostID}\">\n        <i class=\"edit\" />\n      </a>\n    {:else}\n      <i\n        class=\"flag\"\n        on:click={() => {\n          dispatcher('edit', { id: PostID });\n        }} />\n    {/if}\n  </div>\n\n  <div class={react}>\n    <i\n      class=\"thumbs-up\"\n      on:click={() => {\n        dispatcher('like', { id: PostID, reaction: 'like', type: 'article' });\n        if (react == 'like') {\n          react = 'idle';\n          count--;\n        } else if (react == 'dislike') {\n          count = count + 2;\n          react = 'like';\n        } else {\n          count++;\n          react = 'like';\n        }\n      }} />\n\n    <small class=\"count\">{count}</small>\n\n    <i\n      class=\"thumbs-down\"\n      on:click={() => {\n        dispatcher('dislike', {\n          id: PostID,\n          reaction: 'dislike',\n          type: 'article'\n        });\n        if (react == 'dislike') {\n          react = 'idle';\n          count++;\n        } else if (react == 'like') {\n          count = count - 2;\n          react = 'dislike';\n        } else {\n          count--;\n          react = 'dislike';\n        }\n      }} />\n  </div>\n</div>\n","<script>\n  import Head from \"../elements/head.svelte\";\n  import Textarea from \"../elements/textarea.svelte\";\n  import Button from \"../elements/button.svelte\";\n\n  import Card from \"../components/card.svelte\";\n  import Article from \"../components/article.svelte\";\n\n  import { get, username, post, id } from \"../main\";\n\n  export let params;\n\n  $: viewPost = async () => await get(\"/post?postID=\" + params.id);\n  $: getComments = async () => {\n    let res = await get(\"/comments?postID=\" + params.id);\n    return res == null ? [] : res;\n  };\n\n  $: comments = getComments();\n\n  async function react(e) {\n    let emo = e.detail.reaction;\n    let obj;\n    if (e.detail.type == \"article\") {\n      obj = {\n        postID: e.detail.id,\n        reaction: emo\n      };\n    } else {\n      obj = {\n        commentID: e.detail.id,\n        reaction: emo\n      };\n    }\n    let res = await post(\"/reaction\", obj);\n  }\n\n  function report(e) {\n    alert(\"report\");\n  }\n\n  let value = \"\";\n  async function writeComment() {\n    let res = await post(\"/writecomment\", {\n      postID: parseInt(params.id),\n      comment: value\n    });\n    if (res.ok) {\n      comments = getComments();\n      value = \"\";\n    }\n  }\n</script>\n\n<Head title=\"Вопрос\" secondLevel={true} />\n\n<div class=\"scrollable\">\n  {#await viewPost() then post}\n    <Article {...post} on:like={react} on:dislike={react} on:edit={report} />\n  {/await}\n  {#if $username != ''}\n    <Card uid={$id}>\n      <div slot=\"blank\">\n        <Textarea placeholder=\"Ваш комментарий\" autoresize={true} bind:value />\n        <br style=\"display:block; margin: 8px\" />\n        <Button name=\"Опубликовать\" small={true} on:click={writeComment} />\n      </div>\n    </Card>\n  {/if}\n  {#await comments}\n    <p>Loading...</p>\n  {:then com}\n    {#each com as c}\n      <Card {...c} on:plus={react} on:minus={react} />\n    {/each}\n  {/await}\n\n</div>\n","<script>\n  import Button from \"../elements/button.svelte\";\n  import Textarea from \"../elements/textarea.svelte\";\n\n  import { username, cats, upload, host } from \"../main\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatcher = createEventDispatcher();\n  export let title;\n  export let longtext;\n  export let chosenCats;\n  export let button = \"Спросить\";\n  export let fullsize = false;\n\n  let toggle = \"mixed\";\n\n  if (fullsize) {\n    toggle = \"undefined\";\n  }\n\n  // Limitators\n  $: disabled = !(title.length > 3 && chosenCats.length != 0);\n  $: disabledCats = chosenCats.length > 1;\n\n  // Small fix in case if form has been scrolled for a little\n  const scrollTop = () => {\n    let div = document.getElementsByClassName(\"scrollable\")[0];\n    div.scrollTo(0, 0);\n    div.classList.remove(\"true\");\n    div.classList.remove(\"false\");\n    div.classList.add(toggle);\n  };\n\n  let files;\n  function addImage() {\n    setTimeout(async () => {\n      let res = await upload(\"/uploadimg\", \"image\", files);\n      let url = await res.text();\n      longtext +=\n        '<img src=\"' + host + url + '\" alt=\"\" style=\"max-width:100%\" /><br>';\n    }, 200);\n  }\n</script>\n\n<style>\n  .write {\n    position: relative;\n  }\n\n  .short {\n    background: var(--input-color);\n    margin-bottom: 60px;\n  }\n  .cats {\n    padding: 0 16px 16px;\n  }\n\n  .long {\n    border-bottom: var(--border);\n    background: var(--bg-color);\n    position: absolute;\n    margin-top: -60px;\n    width: 100%;\n    z-index: 9;\n  }\n\n  /* Categories picker */\n  input {\n    display: none;\n  }\n\n  .cats > label {\n    color: var(--secondary-color);\n    margin-right: 16px;\n    font-size: 12px;\n    cursor: pointer;\n    opacity: 0.2;\n  }\n\n  input:checked + label {\n    opacity: 1;\n  }\n\n  /* Editor */\n  .editor {\n    background: var(--input-color);\n    border-top: var(--border);\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    font-weight: 200;\n    font-size: 13px;\n    line-height: 1.8;\n    overflow: auto;\n    height: 0;\n  }\n\n  .editor[aria-checked=\"true\"]:empty:not(:focus):before {\n    display: block;\n  }\n\n  .editor:empty:not(:focus):before {\n    content: attr(placeholder);\n    pointer-events: none;\n    color: #93999f;\n    font-size: 12px;\n    display: none;\n  }\n\n  /* Actions panel */\n  .actions {\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n    padding: 16px;\n  }\n\n  span {\n    margin-right: 16px;\n    font-size: 12px;\n    opacity: 0.3;\n  }\n\n  i {\n    opacity: 0.5;\n  }\n\n  i:first-child {\n    margin-right: 16px;\n  }\n\n  /* Toggler */\n  [aria-checked=\"undefined\"] {\n    height: calc(100vh - 236px);\n    padding: 16px;\n  }\n\n  [aria-checked=\"true\"] {\n    height: calc(100vh - 236px);\n    animation: 0.3s down;\n    padding: 16px;\n  }\n\n  [aria-checked=\"false\"] {\n    animation: 0.3s up;\n    padding: 0;\n    height: 0;\n  }\n\n  @keyframes up {\n    0% {\n      height: calc(100vh - 235px);\n    }\n    50% {\n      height: cacl(50vh - 124px);\n    }\n    100% {\n      height: 0;\n    }\n  }\n\n  @keyframes down {\n    0% {\n      height: 0;\n    }\n    50% {\n      height: cacl(50vh - 124px);\n    }\n    100% {\n      height: calc(100vh - 235px);\n    }\n  }\n\n  @media only screen and (max-width: 500px) {\n    [aria-checked=\"true\"] {\n      height: calc(100vh - 235px - 46px);\n      animation: 0.3s downm;\n    }\n\n    [aria-checked=\"false\"] {\n      animation: 0.3s upm;\n    }\n\n    @keyframes upm {\n      0% {\n        height: calc(100vh - 235px - 46px);\n      }\n      50% {\n        height: cacl(50vh - 124px);\n      }\n      100% {\n        height: 0;\n      }\n    }\n\n    @keyframes downm {\n      0% {\n        height: 0;\n      }\n      50% {\n        height: cacl(50vh - 124px);\n      }\n      100% {\n        height: calc(100vh - 235px - 46px);\n      }\n    }\n  }\n</style>\n\n<!-- Don't show form if user is not logged on -->\n{#if $username != ''}\n  <div class=\"write\">\n    <div class=\"short\">\n      <Textarea placeholder=\"На чем застряли?\" bind:value={title} max=\"140\" />\n      <div class=\"cats\">\n\n        <!-- Render all categories from database -->\n        {#await cats() then cat}\n          {#each cat as { id, name }}\n            <input\n              {id}\n              type=\"checkbox\"\n              bind:group={chosenCats}\n              value={id}\n              disabled={chosenCats.includes(id) ? false : disabledCats} />\n            <label for={id}>#{name}</label>\n          {/each}\n        {/await}\n\n      </div>\n    </div>\n    <div class=\"long\">\n      <div\n        placeholder=\"Расширенное пояснение\"\n        bind:innerHTML={longtext}\n        contenteditable=\"true\"\n        aria-checked={toggle}\n        class=\"editor\" />\n      <div class=\"actions\">\n        <div>\n\n          <!-- Toggle full form opening & closing if clicked on chevron icon -->\n          {#if !fullsize}\n            <i\n              class=\"chevrons-{toggle == 'true' ? 'up' : 'down'}\"\n              on:click={() => {\n                toggle = toggle == 'mixed' || toggle == 'false' ? 'true' : 'false';\n                scrollTop();\n              }} />\n\n            <label for=\"image\">\n\n              <!-- Toggle full form opening if clicked on image icon -->\n              <i\n                class=\"image\"\n                on:click={() => {\n                  toggle = 'true';\n                  scrollTop();\n                }} />\n            </label>\n          {:else}\n            <i class=\"trash\" on:click={() => dispatcher('delete', { id: 1 })} />\n            <label for=\"image\">\n              <i class=\"image\" />\n            </label>\n          {/if}\n        </div>\n        <div>\n          <span>{140 - title.length}</span>\n          <Button\n            name={button}\n            small={true}\n            on:click\n            {disabled}\n            on:click={() => {\n              if (!fullsize) {\n                toggle == 'true' && (toggle = 'false');\n                scrollTop();\n              }\n            }} />\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n\n<!-- Hidden file input element -->\n<input\n  type=\"file\"\n  id=\"image\"\n  bind:files\n  accept=\".jpg,.jpeg,.png,.gif\"\n  on:change={addImage} />\n","<script>\n  import Head from \"../elements/head.svelte\";\n\n  import Editor from \"../components/editor.svelte\";\n  import Card from \"../components/card.svelte\";\n\n  import { host, post, upload, filter, sort } from \"../main\";\n\n  $: update = async () => {\n    let res = await fetch(\n      host + \"/api/posts?cat=\" + $filter + \"&byreact=\" + $sort\n    );\n    return await res.json();\n  };\n\n  $: posts = update();\n\n  // Question submit\n  let title = \"\";\n  let longtext = \"\";\n  let chosenCats = [];\n  async function questionSubmit() {\n    let res = await post(\"/writepost\", {\n      title: title,\n      text: longtext,\n      categories: chosenCats\n    });\n\n    if (res.ok) {\n      // Update posts list after submission and clear form\n      posts = update();\n      title = \"\";\n      longtext = \"\";\n      chosenCats = [];\n    }\n  }\n\n  // Upload to server and add image to post\n  let files;\n  function addImage() {\n    setTimeout(async () => {\n      let res = await upload(\"/uploadimg\", \"image\", files);\n      let url = await res.text();\n      longtext +=\n        '<img src=\"' + host + url + '\" alt=\"\" style=\"max-width:100%\" /><br>';\n    }, 200);\n  }\n</script>\n\n<Head title=\"Вопросы\">\n  <i class=\"filter\" />\n</Head>\n<div class=\"scrollable\">\n  <Editor\n    bind:files\n    bind:title\n    bind:longtext\n    bind:chosenCats\n    on:click={questionSubmit}\n    on:change={addImage} />\n  {#await posts then posts}\n    {#if posts != null}\n      {#each posts as p}\n        <Card {...p} />\n      {/each}\n    {/if}\n  {/await}\n\n</div>\n","<script>\n  import { onMount } from \"svelte\";\n  export let name;\n  export let error = null;\n  export let value = \"\";\n  export let type = \"text\";\n\n  let el;\n  onMount(() => {\n    el.type = type;\n  });\n</script>\n\n<style>\n  input {\n    border: none;\n    background: var(--input-color);\n    color: var(--text-color);\n    height: 38px;\n    padding: 10px 20px;\n    display: block;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  label {\n    opacity: 0.4;\n    font-size: 12px;\n  }\n  span {\n    display: block;\n    margin: 2px 0 6px;\n    width: 100%;\n    text-align: right;\n    font-size: 10px;\n    color: rgb(253, 61, 61);\n    height: 14px;\n  }\n\n  div {\n    position: relative;\n  }\n\n  i {\n    position: absolute;\n    right: 12px;\n    top: calc(50% - 17.6px / 2);\n  }\n\n  i.alert-triangle {\n    color: red;\n  }\n</style>\n\n<label for=\"#\">{name}</label>\n<div>\n  <input bind:this={el} on:keyup bind:value />\n  <i class={error == null ? '' : error == '' ? 'check' : 'alert-triangle'} />\n</div>\n\n<span>{error == null ? '' : error}</span>\n","<script>\n  import Head from \"../elements/head.svelte\";\n  import Input from \"../elements/input.svelte\";\n  import Button from \"../elements/button.svelte\";\n\n  import { post, tmpuser, username, fullname, id, save } from \"../main\";\n\n  $: user = $tmpuser;\n  $: pass = \"\";\n  let shake = \"\";\n\n  async function login() {\n    let res = await post(\"/login\", { username: user, password: pass });\n    if (res.ok) {\n      let json = await res.json();\n      save(\"id\", id, json.userID);\n      save(\"username\", username, json.username);\n      save(\"fullname\", fullname, json.fullname);\n      window.location = \"/\";\n    } else {\n      shake = \"shake\";\n      setTimeout(() => (shake = \"\"), 500);\n    }\n  }\n</script>\n\n<style>\n  i {\n    margin-right: 4px;\n  }\n  .sub {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-top: 40px;\n  }\n\n  .shake {\n    animation: shake 0.5s;\n  }\n\n  @keyframes shake {\n    0% {\n      padding-left: 40px;\n      padding-right: 40px;\n    }\n    25% {\n      padding-left: 20px;\n      padding-right: 60px;\n    }\n    50% {\n      padding-left: 60px;\n      padding-right: 20px;\n    }\n    75% {\n      padding-left: 20px;\n      padding-right: 60px;\n    }\n    100% {\n      padding-left: 40px;\n      padding-right: 40px;\n    }\n  }\n</style>\n\n<Head title=\"Вход в систему\" />\n<div class=\"form {shake}\">\n  <Input name=\"Имя пользователя\" bind:value={user} />\n  <Input name=\"Пароль\" type=\"password\" bind:value={pass} />\n  <Button name=\"Войти\" on:click={login} />\n</div>\n<div class=\"sub\">\n  <a href=\"http://ya.ru\">\n    <i class=\"github\" />\n    <span>Войти через Git</span>\n  </a>\n  &ensp;&ensp;&bull;&ensp;&ensp;\n  <a href=\"/#/register\">\n    <i class=\"user-plus\" />\n    <span>Регистрация</span>\n  </a>\n</div>\n","<script>\n  import Head from \"../elements/head.svelte\";\n  import {\n    post,\n    upload,\n    username,\n    fullname,\n    id,\n    update,\n    host,\n    logout\n  } from \"../main\";\n\n  $: userid = $id;\n\n  let files;\n  function uploadAva() {\n    setTimeout(async () => {\n      let uid = $id;\n      id.set(0);\n      let res = await upload(\"/uploadava\", \"avatar\", files);\n      if (res.ok) {\n        update.set(Date.now());\n        id.set(uid);\n      }\n    }, 200);\n  }\n</script>\n\n<style>\n  .log-out {\n    position: absolute;\n    font-size: 18px;\n    right: 16px;\n    top: 17px;\n  }\n\n  img {\n    border-radius: 50%;\n    height: 200px;\n    width: 200px;\n    object-fit: cover;\n    object-position: 50% 50%;\n  }\n\n  .imgUpload {\n    position: relative;\n  }\n\n  .imgUpload > i {\n    color: red;\n    position: absolute;\n  }\n\n  input {\n    position: absolute;\n    opacity: 1;\n  }\n</style>\n\n<Head title={'Профиль'} />\n<i class=\"log-out\" on:click={logout} />\n\n<div class=\"imgUpload\">\n  <i class=\"edit\" />\n  <input type=\"file\" accept=\"image/jpeg\" bind:files on:input={uploadAva} />\n  <img\n    src=\"{host}/avatars/{userid}.jpg?u={$update}\"\n    on:error={() => (userid = 0)}\n    alt=\"\" />\n</div>\n","<script>\n  import Head from \"../elements/head.svelte\";\n  import Input from \"../elements/input.svelte\";\n  import Button from \"../elements/button.svelte\";\n  import { push } from \"svelte-spa-router\";\n  import { post, tmpuser } from \"../main\";\n\n  $: user = \"\";\n  $: full = \"\";\n  $: email = \"\";\n  $: pass1 = \"\";\n  $: pass2 = \"\";\n\n  let usrErr, fnErr, emailErr, passErr, pass2Err;\n  async function register() {\n    let res = await post(\"/register\", {\n      username: user,\n      email: email,\n      fullname: full,\n      password: pass1\n    });\n\n    if (res.ok) {\n      tmpuser.set(user);\n      push(\"/login\");\n    } else {\n      let errs = await res.json();\n      usrErr = errs.UsernameExist && \"Такой никнейм уже зарегистрирован\";\n      emailErr = errs.EmailExist && \"Такой email уже зарегистрирован\";\n      usrErr = errs.UsernameFormat && \"Неверный формат никнейма\";\n      fnErr = errs.FullnameFormat && \"Имя, фамилия слишком короткие\";\n      emailErr = errs.EmailFormat && \"Формат электронной почты неверен\";\n      passErr = errs.PasswordFormat && \"Пароль слишком короткий\";\n    }\n  }\n</script>\n\n<Head title={'Регистрация'} />\n\n<div class=\"form\">\n\n  <Input name={'Никнейм'} bind:value={user} error={usrErr} />\n  <Input name={'Имя, Фамилия'} bind:value={full} error={fnErr} />\n  <Input\n    name=\"Электронная почта\"\n    bind:value={email}\n    type=\"email\"\n    error={emailErr} />\n  <Input name={'Пароль'} bind:value={pass1} type={'password'} error={passErr} />\n  <Input\n    name=\"Повторите пароль\"\n    bind:value={pass2}\n    type=\"password\"\n    error={pass1 != pass2 ? (pass2Err = 'Пароли не совпадают!') : null} />\n  <Button\n    name=\"Зарегистрироваться\"\n    on:click={register}\n    disabled={pass1 != pass2 || pass1 == ''} />\n\n</div>\n","<script>\n  import Head from \"../elements/head.svelte\";\n  import Editor from \"../components/editor.svelte\";\n\n  import { post, get } from \"../main\";\n  import { pop } from \"svelte-spa-router\";\n  import { onMount } from \"svelte\";\n\n  export let params;\n\n  let files;\n\n  $: title = \"\";\n  $: longtext = \"\";\n  $: chosenCats = [];\n\n  $: if (params.id) getPosts();\n\n  async function getPosts() {\n    let res = await get(\"/post?postID=\" + params.id);\n\n    const categs = obj => {\n      let cats = [];\n      obj.forEach(e => {\n        cats.push(e.ID);\n      });\n      return cats;\n    };\n    title = res.Title;\n    longtext = res.Text;\n    chosenCats = categs(res.Categories);\n  }\n\n  async function deletePost(e) {\n    if (confirm(\"Вы уверены?\")) {\n      let res = await post(\"/writepost\", {\n        postID: parseInt(params.id),\n        status: 0\n      });\n      if (res.ok) window.location = \"/\";\n    }\n  }\n\n  async function updatePost(e) {\n    let res = await post(\"/writepost\", {\n      postID: parseInt(params.id),\n      title: title,\n      text: longtext,\n      categories: chosenCats,\n      status: 1\n    });\n    if (res.ok) pop();\n  }\n</script>\n\n<Head title=\"Редактирование\" secondLevel={true} />\n\n<Editor\n  bind:files\n  bind:title\n  bind:longtext\n  bind:chosenCats\n  on:click={updatePost}\n  on:delete={deletePost}\n  button=\"Обновить\"\n  fullsize={true} />\n","import Post from \"./routes/post.svelte\";\nimport Posts from \"./routes/posts.svelte\";\nimport Login from \"./routes/login.svelte\";\nimport Profile from \"./routes/profile.svelte\";\nimport Register from \"./routes/register.svelte\";\nimport Edit from \"./routes/edit.svelte\";\nimport Soon from \"./routes/soon.svelte\";\nimport NotFound from \"./routes/404.svelte\";\nexport const routes = new Map();\n\nroutes.set(\"/\", Posts);\nroutes.set(\"/posts\", Posts);\nroutes.set(\"/login\", Login);\nroutes.set(\"/profile\", Profile);\nroutes.set(\"/register\", Register);\nroutes.set(\"/posts/:id\", Post);\nroutes.set(\"/edit/:id\", Edit);\nroutes.set(\"/knowlege\", Soon);\nroutes.set(\"/ranking\", Soon);\nroutes.set(\"/notify\", Soon);\nroutes.set(\"*\", NotFound);\n","import App from \"./App.svelte\";\nimport { writable } from \"svelte/store\";\n\nexport const host = \"\";\n\nexport const save = (name, store, value) => {\n  store.set(value);\n  localStorage.setItem(name, value);\n};\n\nconst inStore = (name, defval) => {\n  let l = localStorage.getItem(name);\n  return l == null ? defval : l;\n};\n\nexport const username = writable(inStore(\"username\", \"\"));\nexport const fullname = writable(inStore(\"fullname\", \"\"));\nexport const tmpuser = writable(inStore(\"tmpuser\", \"\"));\nexport const id = writable(inStore(\"id\", 0));\nexport const update = writable(Date.now());\n\nexport const filter = writable(\"\");\nexport const sort = writable(\"\");\n\nexport const post = async (url, body) => {\n  let res = await fetch(host + \"/api\" + url, {\n    method: \"POST\",\n    credentials: \"include\",\n    body: JSON.stringify(body),\n  });\n  if (res.status == 403) logout();\n  return res;\n};\n\nexport const get = async (url) => {\n  let res = await fetch(host + \"/api\" + url, {\n    credentials: \"include\",\n  });\n  return await res.json();\n};\n\nexport const upload = async (url, name, files) => {\n  let formData = new FormData();\n  formData.append(name, files[0]);\n  let res = await fetch(host + \"/api\" + url, {\n    \"Content-Type\": \"multipart/form-data\",\n    credentials: \"include\",\n    method: \"POST\",\n    body: formData,\n  });\n  if (res.status == 403) logout();\n  return res;\n};\n\nexport const cats = async () => {\n  let res = await fetch(host + \"/api/categories\");\n  return await res.json();\n};\n\nexport const logout = async () => {\n  localStorage.clear();\n  username.set(\"\");\n  fullname.set(\"\");\n  await post(\"/logout\");\n  window.location = \"/#/login\";\n};\n\nexport const formatDate = (secs) => {\n  let t = new Date(1970, 0, 1);\n  t.setSeconds(secs);\n  let x = new Date();\n  let timezone = -x.getTimezoneOffset() / 60;\n  t.setHours(t.getHours() + timezone);\n  let diff = new Date() - t;\n  let sec = Math.floor(diff / 1000);\n  if (sec < 2) {\n    return \"сейчас\";\n  }\n\n  if (sec < 60) {\n    return sec + \" сек. назад\";\n  }\n\n  let min = Math.floor(diff / 60000);\n  if (min < 60) {\n    return min + \" мин. назад\";\n  }\n  let d = t;\n  d = [\"0\" + d.getDate(), \"0\" + (d.getMonth() + 1), \"\" + d.getFullYear(), \"0\" + d.getHours(), \"0\" + d.getMinutes()].map((component) => component.slice(-2));\n  return d.slice(0, 3).join(\".\") + \" \" + d.slice(3).join(\":\");\n};\n\nconst app = new App({\n  target: document.body,\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","bind","props","bound","create_component","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","cats","filterCat","sorts","set","sort","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","cleanup","sync","result","unsubscribers","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","history","back","routes","prefix","restoreScrollState","RouteItem","path","_sveltesparouter","charAt","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","regexparam","conditions","userData","_pattern","_keys","startsWith","match","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","state","scrollY","scrollTo","scrollX","lastLoc","componentObj","newLoc","checkConditions","loading","loadingParams","loaded","default","scrollRestoration","host","panel","/","Filter","$location","userid","$id","page","secondLevel","title","placeholder","autoresize","size","currentTarget","height","scrollHeight","disabled","small","formatDate","Name","dispatcher","uid","pid","cid","created","username","categories","likes","dislikes","comments","reaction","count","react","id","Title","Categories","Reaction","Text","PostID","AuthorID","Likes","Dislikes","Username","report","alert","params","viewPost","get","getComments","res","emo","postID","commentID","post","parseInt","comment","ok","includes","longtext","chosenCats","button","fullsize","toggle","scrollTop","div","getElementsByClassName","classList","remove","files","disabledCats","setTimeout","upload","url","group","__value","checked","fetch","$filter","$sort","json","posts","el","shake","user","$tmpuser","pass","password","save","userID","fullname","logout","Date","now","usrErr","fnErr","emailErr","passErr","full","email","pass1","pass2","pass2Err","tmpuser","replaceState","hash","errs","UsernameExist","EmailExist","UsernameFormat","FullnameFormat","EmailFormat","PasswordFormat","ID","categs","getPosts","confirm","status","Posts","Soon","localStorage","setItem","inStore","defval","getItem","async","body","method","credentials","JSON","stringify","formData","FormData","Content-Type","secs","t","setSeconds","timezone","getTimezoneOffset","setHours","getHours","diff","sec","floor","min","getDate","getMonth","getFullYear","getMinutes","join","app"],"mappings":"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"}